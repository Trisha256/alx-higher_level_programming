===========================
How to Use 3-say_my_name.py
===========================

This module defines a print my name function ``say_my_name(first_name, last_name="")``.

Usage
=====

``say_my_name(...)`` prints "My name is <first name> <last name>".

::
	
	>>> say_my_name = __import__('3-say_my_name').say_my_name
	>>> say_my_name("John", "Doe")
	My name is John Doe

::
	
	>>> say_my_name("John", "Smith")
	>>> My name is John Smith

The parameter ```last name``` is optional. If no last name is provided,
print an empty string.

::

	>>> say_my_name("Patricia")
	>>> My name is Patricia

Invalid Names
=============

The parameters ``first name`` and ``last name`` must be strings. Else a TypeError is raised.

::

	>>> say_my_name(7, "John")
	Trace back (most recent call last):
	TypeError: first_name must be a string.

::

	>>> say_my_name("LeBron", ["Cavs", "Lakers", "Heat"])
    	Traceback (most recent call last):
    	TypeError: last_name must be a string

::

	>>> say_my_name({"LeBron": 6, "James": 23}, 7.7)
    	Traceback (most recent call last):
    	TypeError: first_name must be a string

::

	>>> say_my_name(None)
    	Traceback (most recent call last):
    	TypeError: first_name must be a string

At least one name must be provided.

::

	>>> say_my_name()
    	Traceback (most recent call last):
    	TypeError: say_my_name() missing 1 required positional argument: 'first_name'





